with(da, interaction.plot(famprog_qual, perfam_qual, empsatis, type = 'l', fixed = T,
trace.label = "% families\n    (terciles)",
xlab = "family programs", ylab = "mean employee satisfaction"))
res_ac = lm(empsatis~famprog,data=da)
summary(res_ac)
perfam_mean = scale(da$perfam,scale=F)
res_ae_mean = lm(empsatis ~ scale(famprog,scale=F)*perfam_mean,
data = da)
summary(res_ae_mean)
res0 = lm(score ~ train, data=db)
summary(res0)
res1 = lm(score ~ train + difficulty, data = db)
summary(res1)
res2 = lm(score ~ train + poly(difficulty,2), data = db)
summary(res2)
res3 = lm(score ~ train * poly(difficulty,2), data=db)
summary(res3)
anova(res0,res1,res2,res3)
```
cor(dc$lifsatis, dc$marsatis)
library('psych')
partial.r(dc, c(5,6), c(3))
anova(res_c2,res_c4)
res_c4 = lm(lifsatis ~ age + kids + marsatis + jobsatis, data = dc)
summary(res_c4)
anova(res_c2,res_c4)
res_c2 = lm(lifsatis ~ kids + age, data=dc)
summary(res_c2)
res_c4 = lm(lifsatis ~ age + kids + marsatis + jobsatis, data = dc)
summary(res_c4)
res_c3 = lm(lifsatis ~ marsatis + jobsatis, data = dc)
summary(res_c3)
dd = read.csv("http://stanford.edu/class/psych252/_downloads/performance.csv")
dd = dd[1:60,] ## remove some NANs
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
tapply(dd$satis, dd$method, mean)
tapply(dd$time, dd$method, mean)
tapply(dd$satis, dd$method, mean)
contrasts(dd$method) <- cbind(c(1,0,0),c(0,1,0)) # Set baseline at control cond
print(summary(lm(dd$satis ~ dd$method)))
manip1 = lm(satis ~ method, data = dd)
summary(manip1)
manip2 = lm(time ~ method, data = dd)
summary(manip2)
dd = read.csv("http://stanford.edu/class/psych252/_downloads/performance.csv")
dd = dd[1:60,] ## remove some NANs
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
contrasts(dd$method) <- cbind(c(1,0,0),c(0,1,0)) # Set baseline at control cond
manip1 = lm(satis ~ method, data = dd)
summary(manip1)
manip2 = lm(time ~ method, data = dd)
summary(manip2)
print(summary(lm(dd$perform ~ dd$method)))
print(anova(lm(dd$perform ~ dd$method)))
print(aov(lm(dd$perform ~ dd$method)))
print(anova(lm(dd$perform ~ dd$method)))
print(summary(lm(dd$perform ~ dd$method)))
contrast1 = c(2,-1,-1)
contrast2 = c(0, 1,-1)
dot_prod = sum(contrast1*contrast2)
print(dot_prod)
anova(lm(perf ~ ability, data = dd))
anova(lm(perform ~ ability, data = dd))
anova(lm(ability ~ method, data = dd))
tapply(dd$ability, dd$method, mean)
tapply(dd$method, dd$ability, mean)
tapply(dd$ability, dd$method, mean)
tapply(dd$perform, dd$method, mean)
ggplot(dd, aes(ability, perform))+
geom_point()+
geom_smooth(method = "lm", se = F)+
theme_classic()
library(ggplot2)
ggplot(dd, aes(ability, perform))+
geom_point()+
geom_smooth(method = "lm", se = F)+
theme_classic()
ggplot(data.d, aes(method.f, ability))+
ggplot(dd, aes(method.f, ability))+
geom_boxplot()+
theme_classic()
ggplot(dd, aes(method, ability))+
geom_boxplot()+
theme_classic()
ggplot(dd, aes(ability, perform))+
geom_point()+
geom_smooth(method = "lm", se = F)+
theme_classic()
ggplot(dd, aes(method, ability))+
geom_boxplot()+
theme_classic()
m1 <- lm(perform ~ ability, data.d); summary(m1)
m2 <- lm(ability ~ method.f, data.d); summary(m2)
m3 <- lm(perform ~ ability + method.f, data.d); summary(m3)
m1 <- lm(perform ~ ability, dd); summary(m1)
m2 <- lm(ability ~ method, dd); summary(m2)
m3 <- lm(perform ~ ability + method, dd); summary(m3)
dd$method.n <- dd$method
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
str(dd
)
dd = read.csv("http://stanford.edu/class/psych252/_downloads/performance.csv")
dd = dd[1:60,] ## remove some NANs
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
print(cor(dd$method, dd$perform)) # raw correlation
dd$method = as.numeric(dd$method)
print(cor(dd$method, dd$perform)) # raw correlation
print(partial.r(dd, c(1,5), c(4))) # after partialing out ability
boxplot(dd$ability, dd$method)
dd = read.csv("http://stanford.edu/class/psych252/_downloads/performance.csv")
dd = dd[1:60,] ## remove some NANs
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
contrasts(dd$method) <- cbind(c(1,0,0),c(0,1,0)) # Set baseline at control cond
boxplot(dd$ability, dd$method)
boxplot(dd$ability ~ dd$method)
tapply(dd$ability, dd$method, mean)
dd$method.n = as.numeric(dd$method)
boxplot(dd$ability ~ dd$method)
tapply(dd$ability, dd$method, mean)
anova(lm(ability ~ method, data = dd))
print(cor(dd$method.n, dd$perform)) # raw correlation
print(partial.r(dd, c(1,5), c(4))) # after partialing out ability
str(dd)
print(partial.r(dd, c(5,6), c(4))) # after partialing out ability
print(cor(dd$method.n, dd$perform)) # raw correlation
print(partial.r(dd, c(5,6), c(4))) # after partialing out ability
dd
dd[6]
print(partial.r(dd, c(5,6), c(4))) # after partialing out ability
print(partial.r(dd, c(6,5), c(4))) # after partialing out ability
print(partial.r(dd, c(1,5), c(4))) # after partialing out ability
print(partial.r(dd, c(2,5), c(4))) # after partialing out ability
print(partial.r(dd, c(3,5), c(4))) # after partialing out ability
str(dd)
dd$ability <- as.numeric(dd$ability)
boxplot(dd$ability ~ dd$method)
tapply(dd$ability, dd$method, mean)
print(cor(dd$method.n, dd$perform)) # raw correlation
print(partial.r(dd, c(3,5), c(4))) # after partialing out ability
cor(dd$method.n, dd$ability)
cor(dd[3],dd[4])
cor(dd[3],dd[5])
cor(dd[4],dd[5])
print(cor(dd$method, dd$perform)) # raw correlation
print(partial.r(dd, c(1,5), c(3))) # after partialing out time
print(partial.r(dd, c(5,6), c(3))) # after partialing out time
dd$method.n = as.numeric(dd$method)
print(cor(dd$method.n, dd$perform)) # raw correlation
print(partial.r(dd, c(5,6), c(3))) # after partialing out time
?partial.r
dd = read.csv("http://stanford.edu/class/psych252/_downloads/performance.csv")
dd = dd[1:60,] ## remove some NANs
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
dd$ability <- as.numeric(dd$ability)
contrasts(dd$method) <- cbind(c(1,0,0),c(0,1,0)) # Set baseline at control cond
str(dd)
dd$method.n <- dd$method
dd = read.csv("http://stanford.edu/class/psych252/_downloads/performance.csv")
dd = dd[1:60,] ## remove some NANs
dd$method.n <- dd$method
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
contrasts(dd$method) <- cbind(c(1,0,0),c(0,1,0)) # Set baseline at control cond
tapply(dd$perform, dd$method, mean)
print(cor(dd$method.n, dd$perform)) # raw correlation
print(partial.r(dd, c(6,5), c(4))) # after partialing out ability
str(dd)
dd[5]
dd[6]
cor(dd$method.n, dd$ability)
print(partial.r(cor(dd), c(6,5), c(4))) # after partialing out ability
dd
cor(dd)
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
boxplot(dd$time ~ dd$method)
dd$method = as.numeric(dd$method)
print(cor(dd$method, dd$perform)) # raw correlation
dd = read.csv("http://stanford.edu/class/psych252/_downloads/performance.csv")
dd = dd[1:60,] ## remove some NANs
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
contrasts(dd$method) <- cbind(c(1,0,0),c(0,1,0)) # Set baseline at control cond
manip1 = lm(satis ~ method, data = dd)
print(partial.r(dd, c(1,5), c(3))) # after partialing out time
print(partial.r(dd, c(1,5), c(3))) # after partialing out time
print(partial.r(dd, c(1,5), c(4))) # after partialing out ability
dd$method = as.numeric(dd$method)
print(cor(dd$method, dd$perform)) # raw correlation
print(partial.r(dd, c(1,5), c(4))) # after partialing out ability
print(partial.r(dd, c(1,5), c(3))) # after partialing out time
boxplot(dd$time ~ dd$method)
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
boxplot(dd$time ~ dd$method)
anova(lm(time ~ method, data = dd))
manip2 = lm(time ~ method, data = dd)
summary(manip2)
contrasts(dd$method) <- cbind(c(1,0,0),c(0,1,0)) # Set baseline at control cond
manip2 = lm(time ~ method, data = dd)
summary(manip2)
tapply(dd$time, dd$method, mean)
dd$method = as.numeric(dd$method)
print(cor(dd$method, dd$perform)) # raw correlation
print(partial.r(dd, c(1,5), c(3))) # after partialing out time
res1 = (lm(perform ~ fun + control, data = dd))
summary(res1)
res1 = (lm(perform ~ fun + control, data = dd))
dd$fun = ifelse(dd$method == 'drill', -1, ifelse(dd$method == 'fun', 1, 0))
dd$control = ifelse(dd$method == 'control', 2, -1)
cor(dd)
dd = read.csv("http://stanford.edu/class/psych252/_downloads/performance.csv")
dd = dd[1:60,] ## remove some NANs
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
contrasts(dd$method) <- cbind(c(1,0,0),c(0,1,0)) # Set baseline at control cond
manip1 = lm(satis ~ method, data = dd)
summary(manip1)
manip2 = lm(time ~ method, data = dd)
summary(manip2)
tapply(dd$perform, dd$method, mean)
print(summary(lm(dd$perform ~ dd$method)))
print(anova(lm(dd$perform ~ dd$method)))
dd$fun = ifelse(dd$method == 'drill', -1, ifelse(dd$method == 'fun', 1, 0))
dd$control = ifelse(dd$method == 'control', 2, -1)
cor(dd)
dd$method = as.numeric(dd$method)
cor(dd)
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
boxplot(dd$ability ~ dd$method)
tapply(dd$ability, dd$method, mean)
anova(lm(ability ~ method, data = dd))
dd$method = as.numeric(dd$method)
print(cor(dd$method, dd$perform)) # raw correlation
print(partial.r(dd, c(1,5), c(4))) # after partialing out ability
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
boxplot(dd$time ~ dd$method)
anova(lm(time ~ method, data = dd))
dd$method = as.numeric(dd$method)
print(cor(dd$method, dd$perform)) # raw correlation
print(partial.r(dd, c(1,5), c(3))) # after partialing out time
dd$funtime = dd$fun * (dd$time - mean(dd$time))
lm(dd$funtime ~ method, data = dd)
summary(lm(dd$funtime ~ method, data = dd))
dd$method <- factor(dd$method, levels = c(1,2,3),
labels = c('drill', 'fun', 'control'))
dd$funtime = dd$fun * (dd$time - mean(dd$time))
summary(lm(dd$method ~ dd$funtime, data = dd))
dd$funtime = dd$fun * (dd$time - mean(dd$time))
summary(lm(dd$method ~ dd$funtime, data = dd))
summary(lm(dd$perform ~ dd$funtime, data = dd))
dd$funtime = dd$fun * (dd$time - mean(dd$time))
summary(lm(dd$perform ~ dd$funtime, data = dd))
summary(lm(dd$perform ~ dd$fun + dd$time + dd$funtime, data = dd))
summary(lm(dd$perform ~ dd$fun + dd$time + dd$ability + dd$funtime, data = dd))
summary(lm(dd$funtime ~ dd$method, data = dd))
summary(lm(perform ~ fun + time + funtime, data = dd))
summary(lm(perform ~ funtime, data = dd))
dd$funtime = dd$fun * (dd$time - mean(dd$time))
summary(lm(perform ~ funtime, data = dd))
res2 = (lm(time ~ fun + control));summary(res2) # a
res2 = (lm(time ~ fun + control, data = dd));summary(res2) # a
res1 = (lm(perform ~ fun + control, data = dd));summary(res1) # c
res3 = (lm(perform ~ time, data = dd));summary(res3)
res3 = (lm(perform ~ fun + control + time, data = dd));summary(res3)
bm.bootstrapmed(method,time,perform)
bm.bootstrapmed(dd$method,dd$time,dd$perform)
res4 = (lm(perform ~ fun + control + time + ability, data = dd));summary(res3)
res4 = (lm(perform ~ fun + control + time + ability, data = dd));summary(res4)
res1 = (lm(perform ~ fun + control, data = dd));summary(res1) # c
res1 = (lm(perform ~ method, data = dd));summary(res1) # c
res2 = (lm(time ~ fun + control, data = dd));summary(res2) # a
res1 = (lm(perform ~ fun + control, data = dd));summary(res1) # c
res3 = (lm(perform ~ fun + control + time, data = dd));summary(res3) # b and c'
anova(res1,res2,res3)
res1 = (lm(perform ~ fun + control, data = dd));summary(res1) # c
res2 = (lm(perform ~ fun + control + time, data = dd));summary(res2) # b and c'
res3 = (lm(perform ~ fun + control + time + ability, data = dd));summary(res3) # b and c'
anova(res1,res2,res3)
res3 = (lm(perform ~ fun + control + time + ability, data = dd));summary(res3) # b and c'
de$coffee = (de$coffee - 1)*2
de$coffee
dd
de
dd
de
de = read.csv("http://stanford.edu/class/psych252/_downloads/caffeine.csv")
de = de[1:60,] ## remove some NANs
de$coffee = (de$coffee - 1)*2
str(de)
print(summary(lm(perf ~ coffee, data=de)))
summary(lm(numprob ~ coffee, data = de))
summary(lm(numprob ~ coffee, data = de))
summary(lm(perf ~ numprob + coffee, data = de))
l1 = mean_j * c1
l1 = mean_j * c1;l1
mean_j
c1
c1 = c(2,-1,-1)
c2 = c(0,-1, 1)
l1 = mean_j * c1;l1
l1 = sum(mean_j * c1;l1)
l1 = sum(mean_j * c1);l1
f_denom
ss_j
sum(ss_j)
sum(ss_j)/14
sum(ss_j)/(14-3)
n_j = c(12,14,11)
n = sum(n_j)
mean_j = c(25.2, 32.6, 28.1)
var_j = c(3.6,4.8, 5.3)
ss_j = var_j * (n_j - 1); ss_j
mean = sum(n_j*mean_j)/n; mean
f_num = sum(n_j * (mean_j - mean)^2)/2; f_num
f_denom = sum(ss_j)/(n-3)
f_ratio = f_num / f_denom; f_ratio
f_denom
ms_b = sum(n_j * (mean_j - mean)^2)/2; f_num
ms_w = sum(ss_j)/(n-3)
f_ratio = ms_b / ms_w; f_ratio
se_squared1 = ms_w*(c1^2/n_j)
se_squared1
se_squared1 = ms_w*sum(c1^2/n_j)
se_squared1
-10.3/sqrt(se_squared1)
pt(t,34)
t
t = l1/sqrt(se_squared1)
t
t = l1/sqrt(se_squared1)
pt(t,34)
l2 = sum(mean_j * c2);
se_squared2 = ms_w*sum(c2^2/n_j)
l2 = sum(mean_j * c2);
se_squared2 = ms_w*sum(c2^2/n_j)
t2 = l2/sqrt(se_squared2)
pt(t2,34)
t2 = l2/sqrt(se_squared2);t2
pt(t2,34)
dot_prod = sum(c1*c2)
dot_prod = sum(c1*c2); dot_prod
?pf
pf(29.7, 3,20)
pf(29.7, 3,20,lower.tail = F)
F_rat = 29.7
pf(F_rat, 3, 20, lower.tail = F)
means = c(10.41, 3.59, 3.40, 3.18)
l = c(1,-1,-1,1)
l_interaction = sum(means * l);
se_squared2 = 2.5*sum(l^2/6)
t2 = l2/sqrt(se_squared2);t2
l_interaction
se_squared2
sqrt(se_squared2)
t_interaction = l_interaction/sqrt(se_squared);t_interaction
se_squared = 2.5*sum(l^2/6)
t_interaction = l_interaction/sqrt(se_squared);t_interaction
pt(t2,34)
pt(t2,20)
pt(t_interaction,20)
pt(t_interaction,20,lower.tail = F)
2*pt(t_interaction,20,lower.tail = F)
means = c(10.4143, 3.5855, 3.3957, 3.1764)
l = c(1,-1,-1,1)
l_interaction = sum(means * l);
se_squared = 2.5*sum(l^2/6)
t_interaction = l_interaction/sqrt(se_squared);t_interaction
2*pt(t_interaction,20,lower.tail = F)
se_squared = 2.49*sum(l^2/6)
t_interaction = l_interaction/sqrt(se_squared);t_interaction
2*pt(t_interaction,20,lower.tail = F)
2*pt(t_interaction,23,lower.tail = F)
pt(t_interaction,23,lower.tail = F)
pt(t_interaction,24,lower.tail = F)
2*pt(t_interaction,24,lower.tail = F)
2*pt(t_interaction,20,lower.tail = F)
t_interaction
se_squared
l_interaction
p_val = 2*pt(t_interaction,20,lower.tail = F)
p_val = 2*pt(t_interaction,20,lower.tail = F);p_val
p_val = dt(t_interaction,20,lower.tail = F);p_val
dt(t_interaction, 20)
p_val = pt(t_interaction,20,lower.tail = F);p_val
t_interaction = l_interaction/sqrt(se_squared);t_interaction
p_val = pt(t_interaction,20,lower.tail = F);p_val
se_squared = 2.49*sum(l^2/6)
t_interaction = l_interaction/sqrt(se_squared);t_interaction
p_val = pt(t_interaction,20,lower.tail = F);p_val
p_val = 2*pt(t_interaction,20,lower.tail = F);p_val
means = c(10.4143, 3.5855, 3.3957, 3.1764)
l = c(1,-1,-1,1)
l_interaction = sum(means * l);
se_squared = 2.49*sum(l^2/6)
t_interaction = l_interaction/sqrt(se_squared);t_interaction
p_val = 2*pt(t_interaction,20,lower.tail = F);p_val
se = sqrt(2.49)/sqrt(12)
print(se)
?interaction.plot
interaction.plot(c(10.41, 3.4), c(3.59, 3.18))
interaction.plot(c("low", "high"), c("low","high"), c(10.41, 3.4, 3.59, 3.18))
interaction.plot(c("low","low","high","high"), c("low","high","low","high"), c(10.41, 3.4, 3.59, 3.18))
interaction.plot(c("low","low","high","high"), c("low","high","low","high"), c(10.41, 3.4, 3.59, 3.18),fixed=T)
interaction.plot(c(0,0,1,1)), c(0,1,0,1), c(10.41, 3.4, 3.59, 3.18),fixed=T)
interaction.plot(c(0,0,1,1), c(0,1,0,1), c(10.41, 3.4, 3.59, 3.18),fixed=T)
soc_supp = factor(c(0,0,1,1), levels = c(0,1), labels = c("low","high"))
self_concept =factor(c(0,1,0,1),levels=c(0,1), labels = c("low","high"))
interaction.plot(soc_supp, self_concept, c(10.41, 3.4, 3.59, 3.18),fixed=T,
xlab = "social support")
xlab = "social support", ylab = "stress")
interaction.plot(soc_supp, self_concept, c(10.41, 3.4, 3.59, 3.18),fixed=T,
xlab = "social support", ylab = "stress")
interaction.plot(soc_supp, self_concept, type = 'b', c(10.41, 3.4, 3.59, 3.18),fixed=T,
xlab = "social support", ylab = "stress")
interaction.plot(soc_supp, self_concept, type = 'b', pch = c('x','o'), c(10.41, 3.4, 3.59, 3.18),fixed=T,
xlab = "social support", ylab = "stress")
interaction.plot(soc_supp, self_concept, c(10.41, 3.4, 3.59, 3.18),
type = 'b', pch = c('x','o'), fixed=T,
xlab = "social support", ylab = "stress", trace.label = "self-concept")
.53*5.7
sqrt(.53^2*.06^2+5.7^2*2.7^2)
sqrt(.53^2*.06^2+5.7^2*2.7^2+.06^2*2.7^2)
sqrt(.53^2*2.7^2+5.7^2*.06^2+.06^2*2.7^2)
3.02/1.48
db = read.csv("http://stanford.edu/class/psych252/_downloads/hw4motive.csv")
res_difficulty_simple = lm(score ~ train * (scale(difficulty) + I(scale(difficulty)^2)), db)
summary(res_difficulty_simple)
scale(db$difficulty)
scale(db$difficulty) - 2
scale(db$difficulty) + 2
scale(db$difficulty - 2)
scale(db$difficulty + 2)
scale(db$difficulty + 2, scale = F)
db$difficulty
3.465/0.268
0.373/0.379
pt(.98,33)
pt(.98,33, lower.tail = T)
?pt
pt(.98,33, lower.tail = F)
2*pt(.98,33, lower.tail = F)
.373/.379
1.072/0.379
pt(2.828, 33, lower.tail = F)
2*pt(2.828, 33, lower.tail = F)
3.465+0.373
3.465+1.072
4+4.95+6.4
(4+4.95+6.4)/3
(4.7+7+6.7)/3
5.12-6.13
2*2.42/25
sqrt(2*2.42/25)
sqrt((1/25+1/25)*2.42)
-1.01/.44
-13.987 * .002
a = -13.987
sa = 4.614
b = -.002
sb = .007
sqrt(b^2*sa^2 + a^2*sb^2 + sa^2*sb^2)
.028 / .1
rb = -0.2756122
rs = -0.3875132
bs = 0.6561109j
bs = 0.6561109
num = rb - (rs*bs)
denom = sqrt((1-rs^2)*(1-bs^2))
num/denom
-.03*sqrt(52/(1-(.03)^2))
pt(-0.22, 51)
1-pt(-0.22, 51)
2*pt(-0.22, 51)
setwd("~/Box Sync/stanford/research/goodman/q&a/experiment1/data")
csv.read("q_and_a1-trials.tsv")
data = read.csv("q_and_a1-trials.tsv", sep = '\t')
data
ls
ls
library(lmer)
install.packages(lmer)
install.packages(lme4)
install.packages("lme4")
d = read.csv('http://www.stanford.edu/class/psych252/data/kv0.csv')
library(lme4)
library(ggplot2)
str(d0)
d1 = reshape(d0, direction = "long", idvar = "subidr", varying=list(c("num1","num2","num3")),timevar="num", v.names="score")
d1 = reshape(d, direction = "long", idvar = "subidr", varying=list(c("num1","num2","num3")),timevar="num", v.names="score")
d1
install.packages(reshape2)
install.packages("reshape2")
install.packages("reshape2")
?melt
library(reshape2)
?melt
library(reshape2)
dl = melt(d, id.vars=c("subidr","attnr"), measure.vars=c("num1","num2","num3"))
head(dl)
d
dl
colnames(dl) = c('id','attn','num','score')
dl
