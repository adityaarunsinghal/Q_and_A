summary(mod_a0)
mod_a1 = lmer(wordsprod ~ sex + poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a1)
anova(mod_a0, mod_a1)
mod_a2 = lmer(wordsprod ~ sex * poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a2)
anova(mod_a0, mod_a1, mod_a2)
contrasts(d1$sex) <- c(0,1)
mod_a0 = lmer(wordsprod ~ sex + age + (1 | Sub), data = d1)
summary(mod_a0)
mod_a1 = lmer(wordsprod ~ sex + poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a1)
mod_a2 = lmer(wordsprod ~ sex * poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a2)
anova(mod_a0, mod_a1, mod_a2)
```
str(d1)
contrasts(d1$sex)
mod_a1 = lmer(wordsprod ~ sex + poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a1)
mod_a2 = lmer(wordsprod ~ sex * poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a2)
contrasts(d1$sex) <- c(1,0)
mod_a0 = lmer(wordsprod ~ sex + age + (1 | Sub), data = d1)
summary(mod_a0)
mod_a1 = lmer(wordsprod ~ sex + poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a1)
mod_a2 = lmer(wordsprod ~ sex * poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a2)
anova(mod_a0, mod_a1, mod_a2)
contrasts(d1$sex) <- c(1,0)
mod_a2 = lmer(wordsprod ~ sex * poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a2)
male_dummy <- contrasts(d1$sex)
male_dummy
contrasts(d1$sex) <- c(0,1)
mod_a0 = lmer(wordsprod ~ sex + age + (1 | Sub), data = d1)
summary(mod_a0)
mod_a1 = lmer(wordsprod ~ sex + poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a1)
mod_a2 = lmer(wordsprod ~ sex * poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a2)
anova(mod_a0, mod_a1, mod_a2)
contrasts(d1$sex) <- c(1,0)
mod_a2 = lmer(wordsprod ~ sex * poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a2)
contrasts(d1$sex) <- c(0,1)
mod_b0 = lmer(wordsprod ~ sex * poly(age,2) + (1 | Sub), data = d1)
summary(mod_b0)
mod_b1 = lmer(wordsprod ~ sex * poly(age,2) + (1 + age | Sub), data = d1)
summary(mod_b1)
anova(mod_b0, mod_b1)
anova(mod_a0, mod_a1, mod_a2)
anova(mod_b0, mod_b1)
anova(mod_c0, mod_b1)
library(lme4)
mod_c0 = lmer(wordsprod ~ age + (1 | Sub), data = d1)
summary(mod_c0)
mod_c1 = lmer(wordsprod ~ sex + age + (1 | Sub), data = d1)
summary(mod_c1)
anova(mod_c0, mod_c1)
anova(mod_c0, mod_b1)
mod_b1 = lmer(wordsprod ~ sex * poly(age,2) + (1 + age | Sub), data = d1)
summary(mod_b1)
summary(mod_a2)
d1 <- read.csv('http://stanford.edu/class/psych252/_downloads/couples.csv')
d1 <- read.csv('http://stanford.edu/class/psych252/_downloads/couples1.csv')
str(d1)
d1$counsel
is.NA(d1$counsel)
??NA
d1$counsel[d1$counsel != NA]
d1$counsel[d1$counsel == NA]
d1$counsel[d1$counsel != NA]
d1$counsel[d1$counsel == 0]
is.na(d1$counsel)
d1$counrep
str(d1)
rs6 = glm(counrep ~ age + educ, data = d2, family = binomial)
d2 <- read.csv('http://stanford.edu/class/psych252/_downloads/couples1.csv')
str(d2)
mod_2B = glm(counrep ~ age + educ, data = d2, family = binomial)
summary(mod_2B)
mod_2B = glm(counrep ~ age + educ + income, data = d2, family = binomial)
summary(mod_2B)
str(d1)
mod_2B = glm(counrep ~ age + educ + incom, data = d2, family = binomial)
summary(mod_2B)
lm(quality ~ counsel, data = d2)
mod_2Bi = lm(quality ~ counsel, data = d2)
summary(mod_2Bi)
mod_2Bii = lm(quality ~ counsel + age + educ, data = d2)
summary(mod_2Bii)
anova(mod_2Bi, mod_2Bii)
mod_2B_binom = glm(counrep ~ age + educ, data = d2, family = binomial)
summary(mod_2B_binom)
mod_2B_binom = glm(counrep ~ age, data = d2, family = binomial)
summary(mod_2B_binom)
mod_2B_binom_ii = glm(counrep ~ educ, data = d2, family = binomial)
summary(mod_2B_binom_ii)
mod_2B_binom_ii = glm(counrep ~ age + educ, data = d2, family = binomial)
summary(mod_2B_binom_ii)
anova(mod_2B_binom_i, mod_2B_binom_ii)
mod_2B_binom_i = glm(counrep ~ age, data = d2, family = binomial)
summary(mod_2B_binom_i)
mod_2B_binom_ii = glm(counrep ~ age + educ, data = d2, family = binomial)
summary(mod_2B_binom_ii)
anova(mod_2B_binom_i, mod_2B_binom_ii)
summary(mod_2B_binom_i)
anova(mod_2B_binom_i, mod_2B_binom_ii)
summary(mod_2B_binom_i)
summary(mod_2B_binom_ii)
summary(anova(mod_2B_binom_i, mod_2B_binom_ii))
anova(mod_2B_binom_i, mod_2B_binom_ii)
aov(mod_2B_binom_i, mod_2B_binom_ii)
anova(mod_2B_binom_i, mod_2B_binom_ii)
anova(mod_2B_binom_i, mod_2B_binom_ii, test="LRT")
?anova
?glm
mod_2B_binom_i = glm(counrep ~ age, data = d2, family = binomial, na.action = na.omit)
summary(mod_2B_binom_i)
mod_2B_binom_ii = glm(counrep ~ age + educ, data = d2,
family = binomial, na.action = na.omit)
summary(mod_2B_binom_ii)
anova(mod_2B_binom_i, mod_2B_binom_ii, test="LRT") # Use
summary(mod_2B_binom_i)
table(d2$counsel ~ d2$age)
table(d2$counsel, d2$age)
table(d2$counsel, d2$age, d2$educ)
chisq.test(table(d2$counsel, d2$age, d2$educ))
chisq.test(table(d2$counsel, d2$age))
chisq.test(table(d2$counrep, d2$age))
table(d2$counrep, d2$age)
chisq.test(t1)
t1 = table(d2$counrep, d2$age)
chisq.test(t1)
summary(chisq.test(t1))
t1 = table(d2$counrep, d2$age, d2$ed)
t1 = table(d2$counrep, d2$age, d2$educ)
summary(chisq.test(t1))
chisq.test(t1)
t1
str(d2)
mod_2Bi = lm(quality ~ counsel, data = d2)
summary(mod_2Bi)
mod_2Bii = lm(quality ~ counsel + age + educ, data = d2)
summary(mod_2Bii)
anova(mod_2Bi, mod_2Bii)
str(d1)
d1
d2$train <- factor(d2$train, levels = c(0,1), labels = c("yes","no"))
xr = seq(0, 3, .5)    # possible values of Responsible
yc = predict(mod_2B_binom_ii, data.frame(age = xr), type = 'response')
logit.data <- data.frame(xr,yc)
ggplot(d2, aes(x=age, y=counrep)) +
geom_jitter(position = position_jitter(width = .05, height = .05)) +
geom_line(data = logit.data, aes(x = xr, y = yc))
xr = seq(0, 3, .5)    # possible values of Responsible
yc = predict(mod_2B_binom_i, data.frame(age = xr), type = 'response')
logit.data <- data.frame(xr,yc)
ggplot(d2, aes(x=age, y=counrep)) +
geom_jitter(position = position_jitter(width = .05, height = .05)) +
geom_line(data = logit.data, aes(x = xr, y = yc))
ggplot(d2, aes(x=age, y=counrep)) +
geom_jitter(position = position_jitter(width = .1, height = .05)) +
geom_line(data = logit.data, aes(x = xr, y = yc))
d2$educ <- factor(d2$educ, levels = c(1,2,3), labels = c("none", "some coll.", "college")
d2$train <- factor(d2$train, levels = c(0,1), labels = c("yes","no"))
d2 <- read.csv('http://stanford.edu/class/psych252/_downloads/couples1.csv')
d2$educ <- factor(d2$educ, levels = c(1,2,3),
labels = c("none", "some coll.", "college"))
d2$train <- factor(d2$train, levels = c(0,1), labels = c("yes","no"))
str(d2)
t1 = table(d2$counrep, d2$age)
chisq.test(t1)
t1
print(t1)
d2 <- read.csv('http://stanford.edu/class/psych252/_downloads/couples1.csv')
d2$educ <- factor(d2$educ, levels = c(1,2,3),
labels = c("none", "some coll.", "college"))
d2$train <- factor(d2$train, levels = c(0,1), labels = c("yes","no"))
str(d2)
t1 = table(d2$counrep, d2$age)
print(t1)
chisq.test(t1)
t1 = table(d2$counrep, d2$age, dnn = c("age", "responded?"))
print(t1)
t1 = table(d2$counrep, d2$age, dnn = c("responded?", "age"))
print(t1)
chisq.test(t1)
mod_2B_binom_i = glm(counrep ~ age, data = d2, family = binomial, na.action = na.omit)
summary(mod_2B_binom_i)
mod_2B_binom_ii = glm(counrep ~ age + educ, data = d2,
family = binomial, na.action = na.omit)
summary(mod_2B_binom_ii)
anova(mod_2B_binom_i, mod_2B_binom_ii, test="LRT") # Use likelihood ratio test
xr = seq(0, 3, .5)    # possible values of Responsible
yc = predict(mod_2B_binom_i, data.frame(age = xr), type = 'response')
logit.data <- data.frame(xr,yc)
ggplot(d2, aes(x=age, y=counrep)) +
geom_jitter(position = position_jitter(width = .1, height = .05)) +
geom_line(data = logit.data, aes(x = xr, y = yc))
mod_2Bi = lm(quality ~ counsel, data = d2)
summary(mod_2Bi)
mod_2Bii = lm(quality ~ counsel + age + educ, data = d2)
summary(mod_2Bii)
anova(mod_2Bi, mod_2Bii)
plot(d2$quality, d2$train)
d2$train <- factor(d2$train, levels = c(0,1), labels = c("yes","no"))
boxplot(d2$quality, d2$train)
str(d2)
d2 <- read.csv('http://stanford.edu/class/psych252/_downloads/couples1.csv')
d2$train <- factor(d2$train, levels = c(0,1), labels = c("yes","no"))
str(d2)
boxplot(d2$quality, d2$train)
boxplot(d2$quality ~ d2$train)
d2 <- read.csv('http://stanford.edu/class/psych252/_downloads/couples1.csv')
d2$train <- factor(d2$train, levels = c(0,1), labels = c("no","yes"))
str(d2)
boxplot(d2$quality ~ d2$train)
boxplot(d2$quality ~ d2$train, xlab = "training?")
boxplot(d2$quality ~ d2$train, xlab = "training?", ylab = "quality")
B3 = lm(quality ~ train, data = d2)
summary(B3)
B3_plus = lm(quality ~ train + age + incom, data = d2)
summary(B3_plus)
anova(B3, B3_plus)
B3_interact = lm(quality ~ train * age + incom, data = d2)
summary(B3_interact)
anova(B3, B3_plus, B3_interact)
B3_plus = lm(quality ~ train + age, data = d2)
summary(B3_plus)
B3_plus_plus = lm(quality ~ train + age + incom, data = d2)
summary(B3_plus_plus)
anova(B3, B3_plus, B3_plus_plus)
gp <- (ggplot(data=d2, aes(x=age,y=quality, colour=factor(train), group=factor(train)))
+ geom_point()
+ stat_summary(fun.y=mean,  geom="line",
aes(group =factor(train), colour=factor(train), lty=factor(train))))
gp
gp <- (ggplot(data=d2, aes(x=age,y=quality, colour=factor(train), group=factor(train)))
+ stat_summary(fun.y=mean,  geom="line",
aes(group =factor(train), colour=factor(train), lty=factor(train))))
gp
gp <- (ggplot(data=d2, aes(x=age,y=quality, colour=factor(train), group=factor(train)))
+ stat_summary(fun.y=mean,  geom="line", geom = "point"
aes(group =factor(train), colour=factor(train), lty=factor(train))))
gp
gp <- (ggplot(data=d2, aes(x=age,y=quality, colour=factor(train), group=factor(train)))
+ stat_summary(fun.y=mean,  geom="line+point",
aes(group =factor(train), colour=factor(train), lty=factor(train))))
gp
bm.med<-function(x,med,y) {
summary(lm(y~x))$coefficients[2,1]->c;
summary(lm(y~x))$coefficients[2,4]->sigc;
summary(lm(med~x))$coefficients[2,1]->a;
summary(lm(med~x))$coefficients[2,2]->sa;
summary(lm(med~x))$coefficients[2,4]->siga;
summary(lm(y~x+med))$coefficients[2,1]->cprime;
summary(lm(y~x+med))$coefficients[2,4]->sigcprime;
summary(lm(y~x+med))$coefficients[3,1]->b;
summary(lm(y~x+med))$coefficients[3,2]->sb;
summary(lm(y~x+med))$coefficients[3,4]->sigb;
sobelsab<-sqrt(b^2*sa^2+a^2*sb^2+sa^2*sb^2);
sobelz<-abs(a*b)/sobelsab;
goodmansab<-sqrt(b^2*sa^2+a^2*sb^2-sa^2*sb^2);
goodmanz<-abs(a*b)/goodmansab;
output_table <- round(rbind(c(c=c,"c'"=cprime,a=a,b=b,ab=a*b,
Sobel=sobelz,Goodman=goodmanz),
c(sigc,sigcprime,siga,sigb,NA,2*(1-pnorm(sobelz)),
2*(1-pnorm(goodmanz)))),3);
rownames(output_table)<-c("Coeff","p val");
print(output_table);
}
bm.bootstrapmed<-function(x,med,y,iterations=1000,alpha=.05) {
as.data.frame(cbind(x,med,y))->vars;
length(x)->N;
bootab<-vector()
for (i in 1:iterations) {
sample(c(1:N),N,replace=T)->sampnums;
lm(vars[sampnums,2]~vars[sampnums,1])$coefficients[2]->itera;
lm(vars[sampnums,3]~vars[sampnums,2]+vars[sampnums,1])$coefficients[2]->iterb;
(append(bootab,itera*iterb))->bootab
}
hist(bootab,main=paste("Bootsrapped a*b, with",iterations,"iterations"),col="red");
bm.med(x,med,y)[1,5]->ab
# Bias correction after Stine (1989)
sum(bootab<=ab)/iterations->prob
qnorm(prob)->Z0
round(pnorm(2*Z0+qnorm(alpha/2)),3)->bcl
round(pnorm(2*Z0+qnorm(1-alpha/2)),3)->bcu
print("Bootstrap results:",quote=F)
print(round(c("Mean(ab*)"=mean(bootab),"p(ab*<ab)"=prob),3))
print("Uncorrected:",quote=F)
print(round(quantile(bootab,c(alpha/2,1-alpha/2)),3))
print("Bias Corrected:",quote=F)
print(round(quantile(bootab,c(bcl,bcu)),3))
}
print(bm.bootstrapmed(d2$train,d2$selfcon,d2$quality))
table(d1$educ)
chisq.test(table(d1$educ))
chisq.test(table(d1$educ), p = c(1/3, 1/3, 1/3))
table(d1$educ, d1$agef)
table(d1$educ, d1$age)
table(d1$educ, d1$age, dnn = c("education", "age"))
table(d1$train, d1$age, dnn = c("education", "age"))
table(d1$educ, d1$age, dnn = c("education", "age"))
chisq.test(t2)
t2 = table(d1$educ, d1$age, dnn = c("education", "age"))
chisq.test(t2)
print(t2)
lm(income ~ age + educ + quality, data = d2)
lm(incom ~ age + educ + quality, data = d2)
summary(res_income)
res_income = lm(incom ~ age + educ + quality, data = d2)
summary(res_income)
res_income1 = lm(incom ~ quality, data = d2)
summary(res_income1)
res_income1 = lm(incom ~ quality, data = d2)
summary(res_income1)
res_income2 = lm(incom ~ age + quality, data = d2)
summary(res_income2)
res_income3 = lm(incom ~ incom + age + quality, data = d2)
summary(res_income3)
anova(res_income1, res_income2, res_income3)
res_income1 = lm(incom ~ quality, data = d2)
summary(res_income1)
res_income2 = lm(incom ~ age + quality, data = d2)
summary(res_income2)
res_income3 = lm(incom ~ incom + age + quality, data = d2)
res_income3 = lm(incom ~ educ + age + quality, data = d2)
summary(res_income3)
anova(res_income1, res_income2, res_income3)
chisq.test(table(d1$educ))
chisq.test(table(d1$educ))
table(d1$educ)
print(table(d1$educ))
anova(mod_c0, mod_c1, refit = F)
library(lme4)
mod_c0 = lmer(wordsprod ~ age + (1 | Sub), data = d1)
summary(mod_c0)
mod_c1 = lmer(wordsprod ~ sex + age + (1 | Sub), data = d1)
summary(mod_c1)
mod_c0 = lmer(wordsprod ~ age + (1 | Sub), data = d1)
library(ggplot2)
d1 <- read.csv('http://stanford.edu/class/psych252/_downloads/vocab0.csv')
d1$age <- 15 + 3 * as.numeric(d1$time0)
d1$time0 <- factor(d1$time0, levels = c(1,2,3,5), labels = c("18","21","24","30"))
d1$sex <- factor(d1$sex, levels = c(0,1), labels = c("M", "F"))
gp <- (ggplot(data=d1, aes(x=age,y=wordsprod, colour=factor(sex), group=factor(sex)))
+ geom_point()
+ stat_summary(fun.y=mean,  geom="line",
aes(group =factor(sex), colour=factor(sex), lty=factor(sex))))
gp
library(lme4)
mod_c0 = lmer(wordsprod ~ age + (1 | Sub), data = d1)
summary(mod_c0)
mod_c1 = lmer(wordsprod ~ sex + age + (1 | Sub), data = d1)
summary(mod_c1)
anova(mod_c0, mod_c1, refit = F)
contrasts(d1$sex) <- c(0,1)
mod_a0 = lmer(wordsprod ~ sex + age + (1 | Sub), data = d1)
summary(mod_a0)
mod_a1 = lmer(wordsprod ~ sex + poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a1)
mod_a2 = lmer(wordsprod ~ sex * poly(age, 2) + (1 | Sub), data = d1)
summary(mod_a2)
anova(mod_a0, mod_a1, mod_a2, refit = F)
contrasts(d1$sex) <- c(0,1)
mod_b0 = lmer(wordsprod ~ sex * poly(age,2) + (1 | Sub), data = d1)
summary(mod_b0)
mod_b1 = lmer(wordsprod ~ sex * poly(age,2) + (1 + age | Sub), data = d1)
summary(mod_b1)
anova(mod_b0, mod_b1, refit = F)
d2 <- read.csv('http://stanford.edu/class/psych252/_downloads/couples1.csv')
d2$train <- factor(d2$train, levels = c(0,1), labels = c("no","yes"))
str(d2)
t1 = table(d2$counrep, d2$age, dnn = c("responded?", "age"))
print(t1)
chisq.test(t1)
mod_2B_binom_i = glm(counrep ~ age, data = d2, family = binomial, na.action = na.omit)
summary(mod_2B_binom_i)
mod_2B_binom_ii = glm(counrep ~ age + educ, data = d2,
family = binomial, na.action = na.omit)
summary(mod_2B_binom_ii)
anova(mod_2B_binom_i, mod_2B_binom_ii, test="LRT") # Use likelihood ratio test
gp <- (ggplot(data=d2, aes(x=age,y=quality, colour=factor(train), group=factor(train)))
+ stat_summary(fun.y=mean,  geom="line",
aes(group =factor(train), colour=factor(train), lty=factor(train))))
gp
setwd("/Users/rxdh/Box Sync/stanford/research/goodman/q&a/experiment3/")
library(dplyr)
library(ggplot2)
d_short = read.csv("versions/experiment3_short/data/q_and_a3_short-trials.tsv",  sep = '\t')
# Remove people who were confused...
ps=read.csv("versions/experiment3_short/data/q_and_a3_short-subject_information.tsv",
sep = '\t')
nonconfused_ps <- (ps %>%
mutate(asses2 = ifelse(is.na(asses), "None", asses)) %>%
filter(asses2 != 1))$workerid
d_short = filter(d_short, workerid %in% nonconfused_ps)
d_short_q = subset(d_short, trial_type == 'question',
select=c(workerid, qud, response))
# Order responses and facets
d_short_q$response = ordered(d_short_q$response,
levels = c("dalmatian", "dog", "mammal", "animal"))
d_short_q$facet_label = (sapply(X = d_short_q$qud,
FUN = function(v) {return(paste("qud:", v))}) %>%
ordered(levels = c("qud: dalmatian", "qud: poodle",
"qud: siamese cat", "qud: goldfish")))
jpeg(filename="../writing/2015/cogsci/exp3_q.jpeg")
g4<-(ggplot(d_short_q, aes(x=response))
+ theme_bw(base_size = 20)
+ theme(axis.text.x = element_text(angle=90, vjust=1))
+ geom_histogram(color="black", fill='black')
+ ggtitle("(a) Questioner responses")
+ facet_wrap(~facet_label))
g4
dev.off()
g4<-(ggplot(d_short_q, aes(x=response))
+ theme_bw(base_size = 20)
+ theme(axis.text.x = element_text(angle=90, vjust=1))
+ geom_histogram(color="black", fill='black')
+ ggtitle("(a) Questioner responses")
+ facet_wrap(~facet_label))
g4
d_short_a = subset(d_short, trial_type == 'ans:',
select=c(workerid, utterance, world_state, response))
# Remove one trial where someone forgot to respond and somehow got through...
d_short_a <- d_short_a[d_short_a$response != "None",]
d_short_a$response = as.numeric(d_short_a$response)
# Map gate number responses onto the objects at those gates on the given trial
d_short_a$world_state = strsplit(as.character(d_short_a$world_state), split = ',')
for(i in 1:dim(d_short_a)[1])
d_short_a$item_response[i] = d_short_a$world_state[[i]][d_short_a$response[i]]
# Order response
d_short_a$response = ordered(d_short_a$item_response,
levels=c("dalmatian","poodle","siamese cat","goldfish"))
# Make nicer labels for facets
new_labels = as.factor(sapply(X = d_short_a$utterance,
FUN = function(v) {return(paste("utterance:", v))}))
# Order facets by level in hierarchy
d_short_a$facet_label = ordered(new_labels,
levels = c("utterance: dalmatian", "utterance: dog",
"utterance: mammal","utterance: animal"))
jpeg(filename="../writing/2015/cogsci/exp3_ans.jpeg")
g4<-(ggplot(d_short_a, aes(x=response))
+ geom_histogram(color="black", fill='black')
+ theme_bw(base_size = 20)
+ theme(axis.text.x = element_text(angle=90, vjust=1))
+ ggtitle("(b) Answerer responses")
+ facet_wrap(~facet_label))
g4
dev.off()
d_exp_q <- tbl_df(d_short_q) %>%  # start with empirical data
group_by(qud, response) %>% # collapse over participants
summarise(emp_prob = n() / 23) %>% # compute empirical probabilities
right_join(expand.grid(response=levels(d_short_q$response), # append back on
qud = levels(d_short_q$qud))) %>%
join(read.csv("analysis/model_prediction/questionerRationalityFitting.csv",
sep = ',')) # join with model predictions
d_exp_q[is.na(d_exp_q)] <- 0
d_exp_q_correlation <- d_exp_q %>%
group_by(ansR, KLR) %>%
filter(ansR > 1) %>% # corr < 0 for ansR <= 1, which throws off scale
summarise(correlation = cor(model_prob, emp_prob))
max_val_exp_q = d_exp_q_correlation[which.max(d_exp_q_correlation$correlation),]
best_pred_exp_q = subset(d_exp_q, ansR == max_val_exp_q$ansR & KLR == max_val_exp_q$KLR)
# Plot param space
g_exp_qParams <- (ggplot(d_exp_q_correlation, aes(x = ansR, y =KLR))
+ geom_tile(aes(fill = correlation))
+ geom_point(x = max_val_exp_q$ansR, y = max_val_exp_q$KLR,
color = 'white', size = 5)
+ scale_fill_gradient(low = "white", high = "black"))
g_exp_qParams
# Plot best model
jpeg(filename="../writing/2015/cogsci/bestExpQuestioner.jpeg")
g_bestexp_q <- (ggplot(best_pred_exp_q, aes(x = model_prob, y = emp_prob))
+ geom_point()
+ ggtitle("Questioner Fit")
+ geom_abline(intercept = 0, slope = 1, linetype="dotted")
+ xlim(0:1)
+ annotate("text", x = .5, y = .75,
label = paste("R^2 = ", round(max_val_exp_q$correlation^2,2)))
+ geom_smooth(method = "lm"))
g_bestexp_q
dev.off()
library(ddply)
library(plyr)
library(ddply)
library(dplyr)
library(ggplot2)
d_exp_q <- tbl_df(d_short_q) %>%  # start with empirical data
group_by(qud, response) %>% # collapse over participants
summarise(emp_prob = n() / 23) %>% # compute empirical probabilities
right_join(expand.grid(response=levels(d_short_q$response), # append back on
qud = levels(d_short_q$qud))) %>%
join(read.csv("analysis/model_prediction/questionerRationalityFitting.csv",
sep = ',')) # join with model predictions
library(plyr)
library(dplyr)
library(dplyr)
library(dplyr)
n
n()
d_exp_q <- tbl_df(d_short_q) %>%  # start with empirical data
group_by(qud, response) %>% # collapse over participants
summarise(emp_prob = n() / 23) %>% # compute empirical probabilities
right_join(expand.grid(response=levels(d_short_q$response), # append back on
qud = levels(d_short_q$qud))) %>%
join(read.csv("analysis/model_prediction/questionerRationalityFitting.csv",
sep = ',')) # join with model predictions
