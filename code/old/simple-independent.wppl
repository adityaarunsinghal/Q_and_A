// --------------------------------------------------------------------
// Original preamble

var makeERP = function(ps, vs){
  return Enumerate(function(){return vs[discrete(ps)]});
};


// --------------------------------------------------------------------
// Original defs

var xs = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

var erpX = makeERP([.1, .1, .1, .1, .1, .1, .1, .1, .1, .1], xs);

var makeErpY = function(x){
  var ps = ((x < 8) ? 
            [.05, .05, .05, .05, .05, .05, .2, .2, .2, .1] :
            [.05, .05, .2, .2, .2, .1, .05, .05, .05, .05]);
  return makeERP(ps, xs);
}

var plus = function(x, y){ return x + y; };
var times = function(x, y){ return x * y; };

var scoreZ = function(z){
  return z > 30 ? 0 : -Infinity;
};


// --------------------------------------------------------------------
// Independent erp defs

// - for dependent erps, need to know input domain
//   (and ideally marginal distribution of input)

var makeUniformERP = function(xs){
  return Enumerate(function(){
    return xs[randomInteger(xs.length)];
  });
};

var uniformErpY = makeUniformERP(xs);

var erpYScore = function(x, y){
  return makeErpY(x).score([], y);
}

var uniformErpYScore = function(y){
  return uniformErpY.score([], y);
}

// --------------------------------------------------------------------
// Original model

var foo = function(x, y){
  return times(plus(x, y), 2);
}

var model = function(){
  var x = sample(erpX);
  var y = sample(uniformErpY);
  factor(erpYScore(x, y) - uniformErpYScore(y));
  var z = foo(x, y);
  factor(scoreZ(z));
  return x;
};

print(Enumerate(model));
